# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Iq605iZ8NBvSLfpSoHsGTYUT6mXx0QRx
"""

#Hadoop
!pip install mrjob
!pip install tabulate

# Define the MRJob class
mrjob_code = '''
from mrjob.job import MRJob

class MRWordCount(MRJob):
    def mapper(self, _, line):
        words = line.split()
        for word in words:
            yield word, 1

    def reducer(self, word, counts):
        yield word, sum(counts)

if __name__ == '__main__':
    MRWordCount.run()
'''

# Write the MRJob class to a file
with open('word_count_script.py', 'w') as script_file:
    script_file.write(mrjob_code)

from google.colab import files

# Upload the input file
uploaded = files.upload()
input_filename = list(uploaded.keys())[0]

# Escape the filename properly and run the script on the uploaded file
!python word_count_script.py -r local "{input_filename}" > output.txt

# Process the output and enhance its structure
word_counts = []
with open('output.txt', 'r') as output_file:
    for line in output_file:
        word, count = line.strip().split('\t')
        word_counts.append((word, int(count)))

# Sort words by count in descending order
word_counts.sort(key=lambda x: x[1], reverse=True)

# Explicitly import the tabulate function
from tabulate import tabulate

# Print the enhanced output using tabulate
table = tabulate(word_counts, headers=['Word', 'Count'], tablefmt='grid')
print(table)



